// Auto-generated from button.html.
// DO NOT EDIT.

library x_button;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'package:web_ui/web_ui.dart';

class Button extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated_html.ButtonElement __e14;
  
  List<autogenerated.WatcherDisposer> __stoppers1;
  
  var __binding13;
  
  Button.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    
    _root.innerHtml = '''
    
    <button class="" id="__e-14"></button>
    ''';
    __e14 = _root.query('#__e-14');
    __binding13 = new autogenerated_html.Text('');
    __e14.nodes.add(__binding13);
    __stoppers1 = [];
    
  }
  
  void inserted_autogenerated() {
    __stoppers1.add(autogenerated.bindCssClasses(__e14, () => buttonClass));
    
    __stoppers1.add(autogenerated.watchAndInvoke(() => '${_text}', (__e) {
      __binding13 = autogenerated.updateBinding(_text, __binding13, __e.newValue);
    }));
    
  }
  
  void removed_autogenerated() {
    _root = null;
    
    (__stoppers1..forEach((s) => s())).clear();
    
    __e14 = null;
    
    __binding13 = null;
    
  }
  
  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated_html.ShadowRoot) _root = this;
  }
  
  /** Original code from the component. */
  
  String size = "default";
  String disabled = "false";
  String _text = "";
  
  String get buttonClass {
    var result = "btn";
    
    if (size == "large") {
      result = "${result} btn-large";
    }
    
    if (disabled == "true") {
      result = "${result} disabled";
    }
    
    return result;
  }
  
  inserted() {
    //print("inserted");
  }
  
  created() {
    print("created");
    _text = text;
    text = "";
    size = attributes["size"];
    disabled = attributes["disabled"];
    if (disabled != null && disabled.isEmpty) {
      disabled = "true";
    }
    
    print("disabled: $disabled");
  }
}

